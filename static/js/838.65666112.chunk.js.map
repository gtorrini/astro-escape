{"version":3,"file":"static/js/838.65666112.chunk.js","mappings":"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","sources":["components/PuzzleIntros.jsx","components/NavButtons.jsx","components/ImageHunt.jsx","components/Protocol.jsx","components/Controls.jsx","components/Cipher.jsx","components/Rebus.jsx","components/Outro.jsx","routes/Play.jsx"],"sourcesContent":["import { React, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n\nimport { ViewportContext } from './useViewport.js';\n\nexport default function PuzzleIntro(props) {\n  const width = useContext(ViewportContext);\n\n  const checkChildren = () => {\n    if (props.children) {\n      return (\n        props.children\n      );\n    }\n  }\n\n  return (\n    <Box \n      sx={{ \n        maxWidth: (width <= 650) ? '95%' : '60%',\n        mx: 'auto',\n        my: 5 \n      }}\n    >\n      <Typography className=\"site-heading\" variant='h5' gutterBottom>\n        {props.title}\n      </Typography>\n      <Typography \n        variant='body1' \n        sx={{ mb: (props.children) ? 3 : 0, textAlign: 'center' }}\n      >\n        {props.blurb}\n      </Typography>\n      {checkChildren()}\n    </Box>\n  );\n}\n\nPuzzleIntro.propTypes = {\n  title: PropTypes.string.isRequired,\n  blurb: PropTypes.string.isRequired,\n  children: PropTypes.element\n}","// 3rd party imports\nimport {memo, React} from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button'; \nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\n\n// Access previous puzzle\nconst BackButton = memo(\n  function BackButton(props) {\n    return (\n      <>\n          <Button\n            aria-label=\"Previous puzzle\"\n            onClick={() => props.handleClick()}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") {\n                props.handleClick();\n              }\n            }}\n            variant='contained'\n          >\n            <ArrowBackIcon/>\n          </Button>\n      </>\n    );\n  }\n);\n\nBackButton.propTypes = {\n    handleClick: PropTypes.func.isRequired\n}\n\n// Access the next puzzle\nconst NextButton = memo (\n  function NextButton(props) {\n    return (\n      <>\n        <Button\n          aria-label=\"Next puzzle\"\n          disabled={props.disabled}\n          onClick={() => props.handleClick()}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              props.handleClick();\n            }\n          }}\n          variant='contained'\n        >\n          <ArrowForwardIcon/>\n        </Button>\n      </>\n    );\n  }\n);\n\nNextButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  disabled: PropTypes.bool.isRequired\n}\n\n// Reset the game (start from puzzle 1)\nconst RestartButton = memo (\n  function RestartButton(props) {\n    return (\n      <>\n        <Button\n          aria-label=\"Restart game\"\n          onClick={() => props.handleClick()}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\") {\n              props.handleClick();\n            }\n          }}\n          variant='contained'\n        >\n          <RestartAltIcon/>\n        </Button>\n      </>\n    );\n  }\n);\n\nRestartButton.propTypes = {\n  handleClick: PropTypes.func.isRequired\n}\n\nexport { BackButton, NextButton, RestartButton };\n","// 3rd-party imports\nimport { React, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\n\n// Local imports\nimport { NextButton } from './NavButtons.jsx';\nimport { ViewportContext } from './useViewport.js';\n\n// Personal item image data\nconst itemData = [\n  {\n    img: 'https://images.unsplash.com/photo-1632757664317-adc33c576b2f',\n    title: 'Dog polaroid',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1598962073869-f9282d672af0',\n    title: 'Crackers',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1588411404261-6052062cb881',\n    title: 'Sketch pad',\n  }, \n  {\n    img: 'https://images.unsplash.com/photo-1608797689272-9fffaa177090',\n    title: 'Seasoning',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1636583133884-fbefc7ac3fb3',\n    title: 'Playing cards',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1502920917128-1aa500764cbd',\n    title: 'Camera',\n  },\n  {\n    img: 'https://clipground.com/images/manual-clipart-2.jpg',\n    title: 'Instruction manual',\n  }, \n  {\n    img: 'https://live.staticflickr.com/5246/5297985633_2d26ffc29b_k_d.jpg',\n    title: 'Luma plushie',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1612016293124-1636e3d99b6a',\n    title: 'Knitting needles',\n  },\n  {\n    img: 'https://live.staticflickr.com/3208/2763488097_56bf92b0ea_k_d.jpg',\n    title: 'Eye mask',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1585849835117-1446a1514ea6',\n    title: 'Tea',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1513542789411-b6a5d4f31634',\n    title: 'Colored pencils',\n  }\n];\n\n// Image list of personal items\nfunction PersonalItemsList(props) {\n  const width = useContext(ViewportContext);\n\n  const handleKeyDown = (event, name) => {\n    if (event.key === \"Enter\") {\n      props.handleClick(name);\n    }\n  }\n\n  return (\n    <ImageList \n      sx={{\n        height: (width <= 800) ? 225 : 450,\n        mx: 'auto',\n        width: (width <= 800) ? 250 : 500, \n      }} \n      cols={3} \n      rowHeight={(width <= 800) ? 85 : 164}\n    >\n      {width < 800 ? \n        (itemData.slice(0, 8)).map((item) => (\n          <ImageListItem key={item.img}>\n            <img\n              srcSet={`${item.img}?w=250&h=225&fit=crop&auto=format&dpr=2 2x`}\n              src={`${item.img}?w=250&h=225&fit=crop&auto=format`}\n              alt={item.title}\n              onClick={() => props.handleClick(item.title)}\n              onKeyDown={(e) => handleKeyDown(e, item.title)}\n              loading=\"lazy\"\n              tabIndex={0}\n            />\n          </ImageListItem>\n        ))\n        :\n        itemData.map((item) => (\n          <ImageListItem key={item.img}>\n            <img\n              srcSet={`${item.img}?w=500&h=450&fit=crop&auto=format&dpr=2 2x`}\n              src={`${item.img}?w=500&h=450&fit=crop&auto=format`}\n              alt={item.title}\n              onClick={() => props.handleClick(item.title)}\n              onKeyDown={(e) => handleKeyDown(e, item.title)}\n              loading=\"lazy\"\n              tabIndex={0}\n            />\n          </ImageListItem>\n        ))\n      }\n    </ImageList>\n  );\n}\n\nPersonalItemsList.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n};\n\n// Component to find instruction manual\nexport default function ImageHunt(props) {\n    const [found, setFound] = useState(false);\n\n    const handleFound = (item) => {\n        if (item === 'Instruction manual') {\n          setFound(true);\n        }\n    }\n\n    return (\n        <>\n            <Box sx={{ maxWidth: '80%', mx: 'auto', my: 5}}>\n              <PersonalItemsList handleClick={handleFound}></PersonalItemsList>\n            </Box>\n            <Grid container>\n                <Grid item xs={4} />\n                <Grid item xs={4} />\n                <Grid item xs={4}>\n                    <NextButton disabled={found === false} handleClick={props.next}></NextButton>\n                </Grid>\n            </Grid>\n        </>\n    ); \n}\n\nImageHunt.propTypes = {\n    next: PropTypes.func.isRequired\n};","// 3rd-party imports\nimport { React, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Fade from '@mui/material/Fade';\nimport FormControl from '@mui/material/FormControl';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Grid from '@mui/material/Grid';\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Typography from '@mui/material/Typography';\nimport { grey, yellow } from '@mui/material/colors';\n\n// Local imports\nimport { BackButton, NextButton, RestartButton } from './NavButtons.jsx';\nimport { ViewportContext } from './useViewport.js';\n\nconst page = yellow[50];\nconst screen = grey[900];\nconst frame = grey[400];\n\n// Instructions for black hole navigation\nfunction Instructions() {\n  const width = useContext(ViewportContext);\n\n  return (\n    <Box\n    sx={{\n      backgroundColor: page,\n      maxWidth: (width <= 650) ? '95%' : '80%',\n      mb: 3,\n      mx: 'auto',\n      padding: 2,\n      textAlign: 'left',\n    }}\n  >\n      <p className=\"page\">Black holes are not galactic vacuum cleaners; they will not indiscriminately consume everything in their path. Missions can fly calmly around both stellar-mass and supermassive black holes, as long as they keep a safe distance. Keep in mind that the bigger the black hole (and the closer you are to it), the faster the velocity required to escape.</p>\n  </Box>\n  );\n}\n\n// Monitoring panel with science insights\nfunction MonitoringPanel() {\n  const width = useContext(ViewportContext);\n\n  return (\n    <Box \n      sx={{\n        backgroundColor: screen,\n        border: (width <= 650) ? 10 : 20,\n        borderColor: frame,\n        maxWidth: (width <= 650) ? '100%' : '75%',\n        mb: 3,\n        mx: 'auto',\n        padding: 2,\n        textAlign: 'left',\n      }}\n    >\n      <p className=\"screen\"> <b>INSIGHTS</b> <br/> The black hole is 6 million times the mass of the Sun, making it <em>supermassive</em>. </p>\n      <p className=\"screen\"> <b>LOCATION</b> <br/> You are outside of the black hole&#39;s event horizon, or &#34;point of no return&#34; inside which not even light can escape. However, you are inside the influence radius, a region where the black hole&#39;s gravity dominates that of nearby stars.</p>\n      <p className=\"screen\"> <b>FUELING</b> <br/> The primary fuel tank is at 17% capacity, and only one of your reserve tanks is remaining.</p>\n    </Box>\n  );\n}\n\n// Choices for black hole navigation\nfunction Choices(props) {\n  const [choice, setChoice] = useState(null);\n  const [correct, setCorrect] = useState(false);\n  const [message, setMessage] = useState(null);\n\n  const handleChoice = (event) => {\n    setChoice(event.target.value);\n    if (event.target.value === 'help') {\n      setCorrect(true);\n      setMessage(null);\n    } else if (event.target.value === 'halt') {\n      setCorrect(false);\n      setMessage('If you keep moving closer, you might eventually enter the realm where stable orbits become impossible. Without changing your trajectory, you could spiral in!');\n    } else if (event.target.value === 'leave') {\n      setCorrect(false);\n      setMessage('This could work around a stellar-mass black hole (only a couple of times the mass of the Sun), but this is a BIG one. Are you sure you have enough fuel to escape?')\n    }\n  }\n\n  return (\n    <>\n      <Box sx={{ mb: 5, mx: 'auto', width: '80%' }}>\n        <FormControl sx={{ mb: 3 }}>\n          <RadioGroup\n            value={choice}\n            onChange={(e) => {\n              setMessage;\n              handleChoice(e);\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setMessage;\n                handleChoice(e);\n              } else if (e.key === 'Escape') {\n                setMessage(null);\n                setChoice(null);\n              }\n            }}\n          >\n            <FormControlLabel\n              value=\"halt\"\n              control={<Radio />}\n              label=\"Do nothing\"\n            ></FormControlLabel>\n            <FormControlLabel\n              value=\"help\"\n              control={<Radio />}\n              label=\"Send a distress signal\"\n            ></FormControlLabel>\n            <FormControlLabel\n              value=\"leave\"\n              control={<Radio />}\n              label=\"Fly away\"\n            ></FormControlLabel>\n          </RadioGroup>\n        </FormControl>\n        {message !== null && (\n          <Fade in={correct === false} timeout={7500} unmountOnExit={true}>\n            <Typography variant='body2'>{message}</Typography>\n          </Fade>\n        )}\n      </Box>\n      <Grid container>\n        <Grid item xs={4}>\n          <BackButton handleClick={props.back}></BackButton>\n        </Grid>\n        <Grid item xs={4}>\n          <RestartButton handleClick={props.restart}></RestartButton>\n        </Grid>\n        <Grid item xs={4}>\n          <NextButton disabled={correct===false} handleClick={props.next}></NextButton>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nChoices.propTypes = {\n  back: PropTypes.func.isRequired,\n  next: PropTypes.func.isRequired,\n  restart: PropTypes.func.isRequired\n};\n\n// Component to select a navigation protocol\nexport default function Protocol(props) {\n  return (\n    <>\n      <Instructions/>\n      <MonitoringPanel/>\n      <Choices back={props.back} next={props.next} restart={props.restart} />\n    </>\n  );\n}\n\nProtocol.propTypes = {\n  back: PropTypes.func.isRequired,\n  next: PropTypes.func.isRequired,\n  restart: PropTypes.func.isRequired\n};\n","// 3rd-party imports\nimport { memo, React, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { blue, grey, lightGreen, orange, red, yellow } from '@mui/material/colors';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport ElectricBoltIcon from '@mui/icons-material/ElectricBolt';\nimport Fab from '@mui/material/Fab';\nimport Grid from '@mui/material/Grid';\nimport RocketLaunchIcon from '@mui/icons-material/RocketLaunch';\nimport SensorOccupiedIcon from '@mui/icons-material/SensorOccupied';\nimport SsidChartIcon from '@mui/icons-material/SsidChart';\nimport SwitchAccessShortcutIcon from '@mui/icons-material/SwitchAccessShortcut';\nimport TextField from '@mui/material/TextField';\n\n// Local imports\nimport { BackButton, NextButton, RestartButton } from './NavButtons.jsx';\nimport { ViewportContext } from './useViewport.js';\n\n// Set up colors & theme\nconst screen = grey[900];\nconst frame = grey[400];\nconst panelColors = createTheme({\n  palette: {\n    blue: {\n      main: blue[500],\n      border: blue[800]\n    },\n    green: {\n      main: lightGreen[500],\n      border: lightGreen[800]\n    },\n    orange: {\n      main: orange[500],\n      border: orange[800]\n    },\n    red: {\n      main: red[500],\n      border: red[800]\n    },\n    yellow: {\n      main: yellow[600],\n      border: yellow[800],\n    },\n  },\n  components: {\n    MuiFab: {\n      styleOverrides: {\n        blue: {\n          '&:hover, &:disabled': {\n            backgroundColor: blue[300],\n          },\n        },\n        green: {\n          '&:hover, &:disabled': {\n            backgroundColor: lightGreen[300],\n          },\n        },\n        orange: {\n          '&:hover, &:disabled': {\n            backgroundColor: orange[300],\n          },\n        },\n        red: {\n          '&:hover, &:disabled': {\n            backgroundColor: red[300],\n          },\n        },\n        yellow: {\n          '&:hover, &:disabled': {\n            backgroundColor: yellow[300],\n          },\n        },\n      },\n    },\n  }\n});\n\n// Screen displaying which subsystem is enabled\nconst ControlScreen = memo(\n  function ControlScreen(props) {\n\n    return (\n      <Box \n        sx={{\n          backgroundColor: screen,\n          border: (props.width <= 650) ? 10 : 20,\n          borderColor: frame,\n          maxWidth: (props.width <= 650) ? '95%' : '60%',\n          mb: 3,\n          mx: 'auto',\n          padding: 2,\n          textAlign: 'center',\n        }}\n      >\n        <p className=\"screen\">{props.display}</p>\n      </Box>\n    );\n  }\n);\n\nControlScreen.propTypes = {\n  display: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired\n};\n\n// Control panel of buttons\nfunction ControlPanel(props) {\n  return (\n    <Box\n      sx={{\n        backgroundColor: frame,\n        borderRadius: '20px',\n        mx: 'auto',\n        mb: 3,\n        maxWidth: (props.width <= 480) ? 336 : 392\n      }}\n    >\n      <ThemeProvider theme={panelColors}>\n        <Fab \n          aria-label=\"electrical power\"\n          color='yellow'\n          disabled={props.send}\n          onClick={() => {props.handleActivate(false, 'ELECTRICAL POWER SUBSYSTEM')}}\n          size={(props.width <= 480) ? 'medium' : 'large'}\n          sx={{ \n            border: '4px solid', \n            borderColor: 'yellow.border', \n            mx: (props.width <= 480) ? 0.5 : 1, \n            my: 2\n          }}\n        >\n          <ElectricBoltIcon/>\n        </Fab>\n        <Fab\n          aria-label=\"propulsion\"\n          color='red'\n          disabled={props.send}\n          onClick={() => {props.handleActivate(false, 'PROPULSION SUBSYSTEM')}}\n          size={(props.width <= 480) ? 'medium' : 'large'}\n          sx={{\n            border: '4px solid',\n            borderColor: 'red.border',\n            mx: (props.width <= 480) ? 0.5 : 1,\n            my: 2\n          }}\n        >\n          <RocketLaunchIcon/>\n        </Fab>\n        <Fab\n          aria-label=\"attitude and orbit control\"\n          color='blue'\n          disabled={props.send}\n          onClick={() => {props.handleActivate(false, 'ATTITUDE & ORBIT CONTROL SUBSYSTEM')}}\n          size={(props.width <= 480) ? 'medium' : 'large'}\n          sx={{\n            border: '4px solid',\n            borderColor: 'blue.border',\n            mx: (props.width <= 480) ? 0.5 : 1,\n            my: 2\n          }}\n        >\n          <SwitchAccessShortcutIcon/>\n        </Fab>\n        <Fab\n          aria-label=\"communications and data handling\"\n          color='orange'\n          disabled={props.send}\n          onClick={() => {props.handleActivate(true, 'COMMUNICATIONS & DATA HANDLING SUBSYSTEM')}}\n          size={(props.width <= 480) ? 'medium' : 'large'}\n          sx={{\n            border: '4px solid',\n            borderColor: 'orange.border', \n            mx: (props.width <= 480) ? 0.5 : 1,\n            my: 2\n          }}\n        >\n          <SsidChartIcon/>\n        </Fab>\n        <Fab\n          aria-label=\"environmental control and life support\"\n          color='green'\n          disabled={props.send}\n          onClick={() => {\n            props.handleActivate(false, 'ENVIRONMENTAL CONTROL & LIFE SUPPORT SUBSYSTEM')\n          }}\n          size={(props.width <= 480) ? 'medium' : 'large'}\n          sx={{\n            border: '4px solid',\n            borderColor: 'green.border',\n            mx: (props.width <= 480) ? 0.5 : 1,\n            my: 2\n          }}\n        >\n          <SensorOccupiedIcon/>\n        </Fab>\n      </ThemeProvider>\n    </Box>\n  );\n}\n\nControlPanel.propTypes = {\n  handleActivate: PropTypes.func.isRequired,\n  send: PropTypes.bool.isRequired,\n  width: PropTypes.number.isRequired\n};\n\n// Component to activate comms & send distress signal\nexport default function Controls(props) {\n  const [activated, setActivated] = useState(false);\n  const [display, setDisplay] = useState('WELCOME');\n  const [message, setMessage] = useState(null);\n  const [error, setError] = useState(null);\n  const [attempts, setAttempts] = useState(0)\n  const [send, setSend] = useState(false);\n\n  const width = useContext(ViewportContext);\n\n  const handleActivate = (isComms, message) => {\n    setActivated(isComms);\n    setDisplay(message);\n  }\n\n  const handleSubmit = (text) => {\n    const count = attempts + 1;\n    setAttempts(attempts + 1);\n    if (text.toLowerCase() === 'sos') {\n      setError(null);\n      setSend(true);\n    } else {\n      switch (count) {\n        case (1):\n          setError('What is the shortest message you could send?')\n          break;\n        default:\n          setError('Hint: can you keep it to 3 letters?')\n      }\n    }\n  }\n\n  return (\n    <>\n      <ControlScreen display={display} width={width} />\n      <ControlPanel handleActivate={handleActivate} send={send} width={width} />\n      <Box sx={{ mb: 5 }}>\n        <TextField \n          error={error !== null}\n          disabled={activated === false}\n          id=\"distress-signal\"\n          label='Distress signal'\n          inputProps={{ maxLength: 25 }}\n          helperText = {error}\n          onChange={(e) => {\n              setMessage(e.target.value)\n              setError(null);\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              handleSubmit(message);\n            }\n          }}\n          size={(width <= 480) ? 'medium' : 'large'}\n        />\n        <Button \n            id=\"distress-submit\"\n            disabled={message === null || send}\n            label=\"Submit\"\n            variant=\"contained\"\n            onClick={() => {handleSubmit(message)}}\n            sx={{ ml: ((width <= 395) ? 0 : 2), mt: 1 }}\n            size={(width <= 480) ? 'medium' : 'large'}\n        >Submit</Button>\n      </Box>\n      <Grid container>\n        <Grid item xs={4}>\n          <BackButton handleClick={props.back}></BackButton>\n        </Grid>\n        <Grid item xs={4}>\n          <RestartButton handleClick={props.restart}></RestartButton>\n        </Grid>\n        <Grid item xs={4}>\n          <NextButton disabled={send===false} handleClick={props.next}></NextButton>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nControls.propTypes = {\n  back: PropTypes.func.isRequired,\n  next: PropTypes.func.isRequired, \n  restart: PropTypes.func.isRequired\n};\n","// 3rd-party imports\nimport { memo, React, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport BackspaceIcon from '@mui/icons-material/Backspace';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { createTheme, styled, ThemeProvider } from '@mui/material/styles';\nimport Grid from '@mui/material/Grid';\nimport HelpCenterIcon from '@mui/icons-material/HelpCenter';\nimport IconButton from '@mui/material/IconButton';\nimport { red, orange, yellow, lightGreen, grey, blue, indigo, purple } from '@mui/material/colors';\n\n// Local imports\nimport { BackButton, NextButton, RestartButton } from './NavButtons.jsx';\nimport { ViewportContext } from './useViewport.js';\n\n// Set up colors & theme\nconst screen = grey[900];\nconst frame = grey[400];\nconst rainbow = createTheme({\n  palette: {\n    red: {\n      main: red[500]\n    },\n    orange: {\n      main: orange[500]\n    },\n    yellow: {\n      main: yellow[600]\n    },\n    green: {\n      main: lightGreen[500]\n    },\n    blue: {\n      main: blue[500]\n    },\n    indigo: {\n      main: indigo[500]\n    },\n    violet: {\n      main: purple[500]\n    },\n  },\n  components: {\n    MuiButtonGroup: {\n      styleOverrides: {\n        firstButton: {\n          border: '6px solid',\n          borderColor: red[800],\n          marginRight: '1px',\n          '&:hover, &:disabled': {\n            backgroundColor: red[300],\n            borderRight: '6px solid ' + red[800]\n          },\n        },\n        middleButton: {\n          borderRight: '6px solid',\n          marginRight: '1px',\n          '&.MuiButton-containedOrange': {\n            borderColor: orange[800],\n            '&:hover, &:disabled': {\n              backgroundColor: orange[300],\n              borderRight: '6px solid ' + orange[800]\n            }, \n          },\n          '&.MuiButton-containedYellow': {\n            borderColor: yellow[800],\n            '&:hover, &:disabled': {\n              backgroundColor: yellow[300],\n              borderRight: '6px solid ' + yellow[800]\n            }, \n          },\n          '&.MuiButton-containedGreen': {\n            borderColor: lightGreen[800],\n            '&:hover, &:disabled': {\n              backgroundColor: lightGreen[300],\n              borderRight: '6px solid ' + lightGreen[800]\n            }, \n          },\n          '&.MuiButton-containedBlue': {\n            borderColor: blue[800],\n            '&:hover, &:disabled': {\n              backgroundColor: blue[300],\n              borderRight: '6px solid ' + blue[800]\n            }, \n          },\n          '&.MuiButton-containedIndigo': {\n            borderColor: indigo[800],\n            '&:hover, &:disabled': {\n              backgroundColor: indigo[300],\n              borderRight: '6px solid ' + indigo[800]\n            }, \n          }\n        },\n        lastButton: {\n          borderColor: purple[800],\n          '&:hover, &:disabled': {\n            backgroundColor: purple[300],\n          }, \n        }\n      },\n    },\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          border: '6px solid',\n        },\n      },\n    },\n  },\n});\n\n// Increase icon button visibility when disabled\nconst ModifiedIcons = styled(IconButton) (() => ({\n  marginLeft: 1,\n  display: 'inline-block',\n  color: screen,\n  '&.Mui-disabled': {\n      color: '#616161',\n  },\n}));\n\n// Screen displaying encoded message, cipher key, & command sequence\nconst CipherKey = memo(\n  function CipherKey(props) {\n    return (\n      <Box \n        sx={{\n          backgroundColor: screen,\n          border: (props.width <= 650) ? 10 : 20,\n          borderColor: frame,\n          maxWidth: 410,\n          mx: 'auto',\n          mb: 3,\n          padding: 1,\n          textAlign: (props.width <= 480) ? 'left' : 'center'\n        }}\n      >\n        <p className=\"screen\"> MSHZO NYVVCF JVSVYZ AV HJJLWA VBY HPK <br/>- HSPLUZ </p>\n        <div style={{ overflow: 'auto' }}>\n          <table className=\"screen\">\n            <tbody>\n              {(props.width > 480) && \n                <>\n                  <tr>\n                    <td>A</td>\n                    <td>B</td>\n                    <td>C</td>\n                    <td>D</td>\n                    <td>E</td>\n                    <td>F</td>\n                    <td>G</td>\n                    <td>H</td>\n                    <td>I</td>\n                    <td>J</td>\n                    <td>K</td>\n                    <td>L</td>\n                    <td>M</td>\n                    <td>N</td>\n                    <td>O</td>\n                    <td>P</td>\n                    <td>Q</td>\n                    <td>R</td>\n                    <td>S</td>\n                    <td>T</td>\n                    <td>U</td>\n                    <td>V</td>\n                    <td>W</td>\n                    <td>X</td>\n                    <td>Y</td>\n                    <td>Z</td>\n                  </tr>\n                  <tr>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td>M</td>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td>U</td>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td>B</td>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                  </tr>\n                </>\n              }\n              {(props.width <= 480) &&\n                <>\n                  <tr>\n                    <td>A</td>\n                    <td>B</td>\n                    <td>C</td>\n                    <td>D</td>\n                    <td>E</td>\n                    <td>F</td>\n                    <td>G</td>\n                    <td>H</td>\n                    <td>I</td>\n                    <td>J</td>\n                    <td>K</td>\n                    <td>L</td>\n                    <td>M</td>\n                  </tr>\n                  <tr>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td>M</td>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                  </tr>\n                  <tr>\n                    <td>N</td>\n                    <td>O</td>\n                    <td>P</td>\n                    <td>Q</td>\n                    <td>R</td>\n                    <td>S</td>\n                    <td>T</td>\n                    <td>U</td>\n                    <td>V</td>\n                    <td>W</td>\n                    <td>X</td>\n                    <td>Y</td>\n                    <td>Z</td>\n                  </tr>\n                  <tr>\n                    <td>U</td>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td>B</td>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                    <td/>\n                  </tr>\n                </>\n              }\n            </tbody>\n          </table>\n        </div>\n        <p className=\"screen\"> &gt;&gt;&gt; {props.display}</p>\n      </Box>\n    );\n  }\n);\n\nCipherKey.propTypes = {\n  display: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired\n}\n\n// Component to decode cipher & send correct sequence\nexport default function Cipher(props) {\n  const [decoded, setDecoded] = useState(false);\n  const [display, setDisplay] = useState('INPUT COMMAND SEQUENCE');\n\n  const width = useContext(ViewportContext);\n\n  const validateResponse = (message) => {\n    if (message === 'GROOVY') {\n      setDecoded(true);\n    } else {\n      setDecoded(false);\n    }\n  }\n\n  const handleKey = (message, letter) => {\n    if (message.length < 25) {\n      const nextMessage = message.concat(letter);\n      setDisplay(nextMessage);\n      validateResponse(nextMessage);\n    } \n  }\n\n  const handleBackspace = (message) => {\n    if (message.length === 1) {\n      setDisplay('');\n    } else {\n      const nextMessage = message.slice(0, -1);\n      setDisplay(nextMessage);\n      validateResponse(nextMessage);\n    }\n  }\n\n  const handleClear = () => {\n    setDisplay('');\n  }\n\n  const handleHint = () => {\n    setDisplay('Hint: ROY G. BIV');\n  }\n\n  return (\n    <>\n      <CipherKey display={display} width={width} />\n      <Box\n        sx={{\n          backgroundColor: frame,\n          borderRadius: '10px',\n          maxWidth: (width <= 415) ? 205 : 384,\n          mx: 'auto',\n          mb: 5\n        }}\n      >\n        <ThemeProvider theme={rainbow}>\n            <ButtonGroup \n              aria-label=\"Color buttons\"\n              disabled={decoded}\n              sx={{ display: \"block\", padding: (width > 480) ? 2 : 1 }}\n              variant='contained'\n            >\n              <Button \n                aria-label=\"Red\"\n                color='red'\n                onClick={() => handleKey(display, 'R')} \n                sx={{\n                  height: (width > 480) ? 48 : 32,\n                  width: (width > 480) ? 48 : 32\n                }}\n                title=\"Red\"\n              ></Button>\n              <Button\n                aria-label=\"Orange\"\n                color='orange'\n                onClick={() => handleKey(display, 'O')}\n                sx={{\n                  height: (width > 480) ? 48 : 32,\n                  width: (width > 480) ? 48 : 32\n                }}\n                title=\"Orange\"\n              ></Button>\n              <Button\n                aria-label=\"Yellow\"\n                color='yellow'\n                onClick={() => handleKey(display, 'Y')}\n                sx={{\n                  height: (width > 480) ? 48 : 32,\n                  width: (width > 480) ? 48 : 32\n                }}\n                title=\"Yellow\"\n              ></Button>\n              <Button\n                aria-label=\"Green\"\n                color='green'\n                onClick={() => handleKey(display, 'G')}\n                sx={{\n                  height: (width > 480) ? 48 : 32,\n                  width: (width > 480) ? 48 : 32\n                }}\n                title=\"Green\"\n              ></Button>\n              <Button\n                aria-label=\"Blue\"\n                color='blue'\n                onClick={() => handleKey(display, 'B')}\n                sx={{\n                  height: (width > 480) ? 48 : 32,\n                  width: (width > 480) ? 48 : 32\n                }}\n                title=\"Blue\"\n              ></Button>\n              <Button\n                aria-label=\"Indigo\"\n                color='indigo'\n                onClick={() => handleKey(display, 'I')}\n                sx={{\n                  height: (width > 480) ? 48 : 32,\n                  width: (width > 480) ? 48 : 32\n                }}\n                title=\"Indigo\"\n              ></Button>\n              <Button\n                aria-label=\"Violet\"\n                color='violet'\n                onClick={() => handleKey(display, 'V')}\n                sx={{\n                  height: (width > 480) ? 48 : 32,\n                  width: (width > 480) ? 48 : 32\n                }}\n                title=\"Violet\"\n              ></Button>\n          </ButtonGroup>\n        </ThemeProvider>\n        <ModifiedIcons\n          aria-label=\"Backspace command sequence\"\n          disabled={display.length === 0 || decoded}\n          onClick={() => handleBackspace(display)}\n          title=\"Backspace\"\n        >\n          <BackspaceIcon fontSize=\"medium\"></BackspaceIcon>\n        </ModifiedIcons>\n        <ModifiedIcons \n          aria-label=\"Clear command sequence\"\n          disabled={display.length === 0 || decoded}\n          onClick={() => handleClear()}\n          title=\"Clear\"\n        >\n          <ClearIcon fontSize=\"large\"></ClearIcon>\n        </ModifiedIcons>\n        <ModifiedIcons\n          aria-label=\"Get help with this puzzle\"\n          disabled={decoded}\n          onClick={() => handleHint()}\n          title=\"Hint\"\n        >\n          <HelpCenterIcon fontSize=\"medium\"></HelpCenterIcon>\n        </ModifiedIcons>\n      </Box>\n      <Grid container>\n        <Grid item xs={4}>\n          <BackButton handleClick={props.back}></BackButton>\n        </Grid>\n        <Grid item xs={4}>\n          <RestartButton handleClick={props.restart}></RestartButton>\n        </Grid>\n        <Grid item xs={4}>\n          <NextButton disabled={decoded===false} handleClick={props.next}></NextButton>\n        </Grid>\n      </Grid>\n    </>\n  )\n}\n\nCipher.propTypes = {\n  back: PropTypes.func.isRequired,\n  next: PropTypes.func.isRequired,\n  restart: PropTypes.func.isRequired\n}","// 3rd-party imports\nimport { React, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\n// Local imports\nimport { BackButton, RestartButton } from './NavButtons.jsx';\nimport { ViewportContext } from './useViewport.js';\n\n// Display & solve a rebus puzzle\nfunction Puzzle(props) {\n  const [answer, setAnswer] = useState(null);\n  const [error, setError] = useState(null);\n  const [explain, setExplain] = useState(false);\n\n  const handleSubmit = (text) => {\n    if (text.toLowerCase().includes(props.includes)) {\n      setError(null);\n      setExplain(true);\n      props.handleSolved();\n    } else {\n      setError(props.hint);\n    }\n  }\n\n  return (\n    <>\n      <Box sx={{ mb: (props.id === '1') ? 10 : 5 }} >\n        <Typography variant={(props.width <= 480) ? 'h6' : 'h3'} sx={{padding: 2}}>\n          {props.clue}\n        </Typography>\n        <Box sx={{ my: 3 }}>\n          <TextField \n            error={error !== null}\n            helperText={error}\n            id={\"rebus-\" + props.id + \"-answer\"}\n            label='Answer'\n            inputProps={{ maxLength: 25 }}\n            onChange={e => {\n                setAnswer(e.target.value)\n                setError(null);\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                handleSubmit(answer);\n              }\n            }}\n            size={(props.width <= 480) ? 'small' : 'large'}\n          />\n          <Button \n            aria-label=\"submit\"\n            disabled={answer === null || explain}\n            display={(window.innerWidth <= 480) ? 'block' : 'inline'}\n            label='Submit'\n            variant='contained'\n            onClick={() => {handleSubmit(answer)}}\n            sx={{ ml: ((props.width < 424) ? 0 : 2), mt: ((props.width <= 480) ? 0.5 : 1) }}\n            size={(props.width <= 480) ? 'small' : 'large'}\n          >\n            Submit\n          </Button>\n        </Box>\n        {explain && \n          <Box\n              sx={{\n                  backgroundColor: '#b71c1c',\n                  borderRadius: 1,\n                  maxWidth: (props.width <= 480) ? '100%' : '60%',\n                  mb: 3,\n                  mx: 'auto'\n              }}\n          >\n              <Typography variant='body2' sx={{padding: 2, textAlign: 'justify'}}>\n                  {props.explanation}\n              </Typography>\n          </Box>\n        }\n      </Box>\n    </>\n  );\n}\n\nPuzzle.propTypes = {\n  includes: PropTypes.string.isRequired,\n  clue: PropTypes.object.isRequired,\n  hint: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  explanation: PropTypes.object.isRequired,\n  handleSolved: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired\n};\n\n// Component to hold multiple rebus puzzles\nexport default function Rebus(props) {\n  const [first, setFirst] = useState(false);\n  const [second, setSecond] = useState(false);\n\n  const width = useContext(ViewportContext);\n\n  const handleFirst = () => {\n    setFirst(true);\n  }\n\n  const handleSecond = () => {\n    setSecond(true);\n  }\n\n  const spaghetti = {\n    includes: 'spaghettification',\n    clue: <>&#127837; + FI + &#128049; + (&#129409; - L)</>,\n    hint: 'Hint: SPAGHETTI + FI + CAT + (LION - L)',\n    id: '1',\n    explanation: <>\n      The tidal forces near black holes are so intense that they can stretch out\n      and flatten objects in a process called <b>spaghettification</b>. In fact, \n      tidal acceleration makes travelling around stellar-mass black holes more dangerous than\n      supermassive black holes! Since the radius of the event horizon (or &#34;point of no return&#34;) increases with the mass of the black hole, the edge of a less massive black hole is\n      actually closer to the infinitely dense region at its center.\n    </>,\n    handleSolved: handleFirst\n  };\n\n  const radiation = {\n    includes: 'radiation',\n    clue: <>(&#128251; [O&rarr;A]) + (&#128084; - E) + (&#127816; - MEL)</>,\n    hint: 'Hint: (RADIO [O→A]) + (TIE - E) + (MELON - MEL)',\n    id: '2', \n    explanation: <>\n      When a black hole&#39;s gravity pulls in stars, gas, or dust, the material begins to \n      orbit in a rotating disk. As different streams of particles inside the disk move\n      past each other, the friction between them produces heat and high-energy <b>radiation</b>. This includes the emission of powerful X-rays, which can damage your cells!\n    </>,\n    handleSolved: handleSecond\n  }\n\n  return (\n    <>\n      <Puzzle {...spaghetti} width={width} />\n      <Puzzle {...radiation} width={width} />\n      <Grid container>\n        <Grid item xs={4}>\n          <BackButton handleClick={props.back}></BackButton>\n        </Grid>\n        <Grid item xs={4}>\n          <RestartButton handleClick={props.restart}></RestartButton>\n        </Grid>\n        <Grid item xs={4}>\n          <Button\n            disabled={(first===false) && (second===false)}\n            variant='contained' \n            onClick={props.next}\n          >\n            Finish\n          </Button>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nRebus.propTypes = {\n  back: PropTypes.func.isRequired,\n  next: PropTypes.func.isRequired,\n  restart: PropTypes.func.isRequired\n}","import { React } from 'react';\nimport PuzzleIntros from './PuzzleIntros.jsx';\n\nexport default function Outro() {\n  const heading = '\\u2726 CONGRATULATIONS \\u2726';\n  const closing = 'Thanks for playing!';\n\n  return (\n    <>\n      <PuzzleIntros title={heading} blurb={closing} />\n    </>\n  );\n}","// 3rd-party imports \nimport { React, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Step from '@mui/material/Step';\nimport Stepper from '@mui/material/Stepper';\nimport StepLabel from '@mui/material/StepLabel';\n\n// Local imports\nimport PuzzleIntros from '../components/PuzzleIntros.jsx';\nimport ImageHunt from '../components/ImageHunt.jsx';\nimport Protocol from '../components/Protocol.jsx';\nimport Controls from '../components/Controls.jsx';\nimport Cipher from '../components/Cipher.jsx';\nimport Rebus from '../components/Rebus.jsx';\nimport Outro from '../components/Outro.jsx';\n\nconst titleCards = {\n  1: {\n    title: 'Puzzle #1',\n    blurb: 'You want to look up the protocol for flying near black holes, but you misplaced your instruction manual. Search through your personal items below to find it.',\n  }, \n  2: {\n    title: 'Puzzle #2',\n    blurb: 'Read the instructions in the mission manual. Use your discretion and reports from the monitoring panel to determine the best protocol.',\n  },\n  3: {\n    title: 'Puzzle #3',\n    blurb: 'In your panic, you spilled coffee all over the schematics in your manual. Using the control panel below, activate the correct subsystem to send a distress signal.',\n  },\n  4: {\n    title: 'Puzzle #4',\n    blurb: 'You received a response, but it seems to be encoded. Decode the response using the cipher below. Then, follow any relevant instructions to enter negotiations.',\n  },\n  5: {\n    title: 'Puzzle #5',\n    blurb: 'An alien ship has offered help, but they doubt your ability to responsibly navigate the cosmos. Solve the rebus puzzles below to prove you are ultimately worthy of their compassion.',\n  },\n}\n\n// Component to hold escape room puzzles\nexport default function Escape() {\n  const [activeStep, setActiveStep] = useState(0);\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleRestart = () => {\n    setActiveStep(0);\n  };\n\n  const handleContent = () => {\n    switch(activeStep) {\n      case(0): \n        return(\n          <>\n            <PuzzleIntros title={titleCards[1].title} blurb={titleCards[1].blurb}/>\n            <ImageHunt next={handleNext}/>\n          </>\n        );\n      case(1):\n        return(\n          <>\n            <PuzzleIntros title={titleCards[2].title} blurb={titleCards[2].blurb}/>\n            <Protocol back={handleBack} next={handleNext} restart={handleRestart}/>\n          </>\n        );\n      case(2):\n        return(\n          <>\n            <PuzzleIntros title={titleCards[3].title} blurb={titleCards[3].blurb}/>\n            <Controls back={handleBack} next={handleNext} restart={handleRestart}/>\n          </>\n        );\n      case(3):\n        return(\n          <>\n            <PuzzleIntros title={titleCards[4].title} blurb={titleCards[4].blurb}/>\n            <Cipher back={handleBack} next={handleNext} restart={handleRestart}/>\n          </>\n        );\n      case(4):\n        return(\n          <>\n            <PuzzleIntros title={titleCards[5].title} blurb={titleCards[5].blurb}/>\n            <Rebus back={handleBack} next={handleNext} restart={handleRestart}/>\n          </>\n        );\n      case(5):\n        return(\n          <Outro/>\n        );\n    }\n  };\n  \n  return (\n    <>\n      <Box sx={{ mx: 2, my: 2}}>\n        <Stepper activeStep={activeStep}>\n          <Step key=\"puzzle-1\">\n            <StepLabel/>\n          </Step>\n          <Step key=\"puzzle-2\">\n            <StepLabel/>\n          </Step>\n          <Step key=\"puzzle-3\">\n            <StepLabel/>\n          </Step>\n          <Step key=\"puzzle-4\">\n            <StepLabel/>\n          </Step>\n          <Step key=\"puzzle-5\">\n            <StepLabel/>\n          </Step>\n        </Stepper>\n        {handleContent()}\n      </Box>\n    </>\n  );\n}\n"],"names":["PuzzleIntro","props","width","useContext","ViewportContext","_jsxs","Box","sx","maxWidth","mx","my","children","_jsx","Typography","className","variant","gutterBottom","title","mb","textAlign","blurb","checkChildren","BackButton","memo","_Fragment","Button","onClick","handleClick","onKeyDown","e","key","ArrowBackIcon","NextButton","disabled","ArrowForwardIcon","RestartButton","RestartAltIcon","itemData","img","PersonalItemsList","handleKeyDown","event","name","ImageList","height","cols","rowHeight","slice","map","item","ImageListItem","srcSet","concat","src","alt","loading","tabIndex","ImageHunt","_useState","useState","_useState2","_slicedToArray","found","setFound","Grid","container","xs","next","page","yellow","screen","grey","frame","Instructions","backgroundColor","padding","MonitoringPanel","border","borderColor","Choices","choice","setChoice","_useState3","_useState4","correct","setCorrect","_useState5","_useState6","message","setMessage","handleChoice","target","value","FormControl","RadioGroup","onChange","FormControlLabel","control","Radio","label","Fade","in","timeout","unmountOnExit","back","restart","Protocol","panelColors","createTheme","palette","blue","main","green","lightGreen","orange","red","components","MuiFab","styleOverrides","ControlScreen","display","ControlPanel","borderRadius","ThemeProvider","theme","Fab","color","send","handleActivate","size","ElectricBoltIcon","RocketLaunchIcon","SwitchAccessShortcutIcon","SsidChartIcon","SensorOccupiedIcon","Controls","activated","setActivated","setDisplay","_useState7","_useState8","error","setError","_useState9","_useState10","attempts","setAttempts","_useState11","_useState12","setSend","handleSubmit","text","count","toLowerCase","isComms","TextField","id","inputProps","maxLength","helperText","ml","mt","rainbow","indigo","violet","purple","MuiButtonGroup","firstButton","marginRight","borderRight","middleButton","lastButton","MuiButton","root","ModifiedIcons","styled","IconButton","marginLeft","CipherKey","style","overflow","Cipher","decoded","setDecoded","validateResponse","handleKey","letter","length","nextMessage","ButtonGroup","handleBackspace","BackspaceIcon","fontSize","ClearIcon","HelpCenterIcon","Puzzle","answer","setAnswer","explain","setExplain","includes","handleSolved","hint","clue","window","innerWidth","explanation","Rebus","first","setFirst","second","setSecond","spaghetti","radiation","_objectSpread","Outro","PuzzleIntros","titleCards","Escape","activeStep","setActiveStep","handleNext","prevActiveStep","handleBack","handleRestart","Stepper","Step","StepLabel","handleContent"],"sourceRoot":""}